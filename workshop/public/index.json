[
{
	"uri": "/",
	"title": "AWS Computer Vision at the Edge Workshop",
	"tags": [],
	"description": "",
	"content": "The Labs in this workshop are hands-on activities to explore using AWS Services for Computer Vision at the Edge. The services this workshop explores inlcude:\n AWS IoT Greengrass v2 Amazaon SageMaker and Amazon SageMaker Edge Manager (including Amazon SageMaker Neo) AWS IoT Core  The activities use a mix of AWS Command Line Interface (CLI) and the web based AWS Management Console.\nDifferent types of edge hardware are used in these labs. Before you begin, ensure you have an AWS Account and at least one of these hardware options:\n nVidia Jetson Nano, TX2, or AGX  "
},
{
	"uri": "/greengrass-v2/validate.html",
	"title": "Validate",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "/greengrass-v2/install.html",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "/setup-nvidia-device.html",
	"title": "Setup nVidia Device",
	"tags": [],
	"description": "",
	"content": "In this section you will set up an nVidia Jetson Nano, TX2, or AGX device with\n Latest Jetpack and other libraries  And then you will install and configure AWS IoT Greengrass v2 on the device.\nPrerequisites You will need\n host computer (Linux, MacOS, or Windows) \u0026ndash; referred to as host \u0026ndash; with administrator or root access an AWS Account with Access Key and Secret Key credentials that has the ability to create IAM roles, IoT Resources, and S3 objects as AWS Console login to the same account an nVidia device (Jetson Nano, TX2, or AGX) internet access  Depending on the device, you may also need\n SD Card (32GB or larger recommended) \u0026ndash; the device will run from this card a USB SD Card reader for use in the host computer to write the device software  To access the device, network connectivity between the host and the device are recommended so as to allow for SSH from the host to the device. Alternatively, an HDMI display, mouse, and keyboard can be directly attached to the device for access. Yet another option for some devices is to configure the device upon First Boot using a USB cable.\nSee the apporpriate nVidia guide for your device:\n Jetson Nano  While these labs are written to primarily use the host computer, it is possible to execute all the commands directly on the target device. If you wish to do that, you may need to modify the lab guides slightly.\n"
},
{
	"uri": "/setup-nvidia-device/nano.html",
	"title": "Jetson Nano",
	"tags": [],
	"description": "",
	"content": "This lab will help you set up an nVidia Jetson Nano as expected for the remainder of the labs.\nWhile your Nano may have come with the latest version of JetPack (nVidia\u0026rsquo;s SDK) pre-installed, for the purposes of this guide, a fresh installation will be created. If you are uncertain if the SDK has been pre-installed, you can follow this guide.\nSTEP 1: Download the SD Card Image for the Latest JetPack This guide was prepared with JetPack v. 4.5.1\n  From the JetPack SDK Page find the SD Card Image Link for the Jetson Nano.\n  Click the Download the SD Card Image link or use the following commands (Linux):\n  cd ~ wget https://developer.nvidia.com/jetson-nano-sd-card-image -O \u0026#39;image.zip\u0026#39; NB- the image is over 6GB and contains the complete OS for the Nano. The time to download this image may be significant depending on your bandwidth.\nUnzip the image  cd ~ unzip \u0026lt;zipfile-downloaded-above\u0026gt; This will expand the sd-blob-b01.img file.\nSTEP 2: Write the image to the SD Card   Insert an SD Card of at least 16GB (32GB or more recommended) into a card reader and insert the card reader into the host computer\u0026rsquo;s USB port.\n  Identify the device name for the card\n   Linux\n Type these commands into the terminal:\ncd ~ # or directory where you extrace the img file lsblk # inspect the list to find the disk you just inserted.  # You may need to list it first WITHOUT the card and then again to determine the device name. #  # The device name will be of the form `/dev/sd\u0026lt;x\u0026gt;` where \u0026lt;x\u0026gt; is a letter. # export disk_letter=\u0026lt;insert_your_disk_letter\u0026gt;  MacOS\n Use the Terminal app to enter these commands:\ncd ~ # or directory where you extrace the img file diskutil list # inspect the list to find the disk you just inserted.  # You may need to list it first WITHOUT the card and then again to determine the device name. #  # The device name will be of the form `/dev/disk\u0026lt;n\u0026gt;` where \u0026lt;n\u0026gt; is an integer. # export disk_num=\u0026lt;insert_your_disk_number\u0026gt; Erase the Card Required for MacOS, optional for Linux hosts   MacOS\n diskutil eraseDisk ExFAT Untitled /dev/disk$disk_num diskutil unmountDisk /dev/disk$disk_num Write the image file   Linux\n sudo dd if=sd-blob-b01.img of=/dev/rdisk$disk_letter  MacOS\n sudo dd if=sd-blob-b01.img of=/dev/rdisk$disk_num # note use of /dev/rdisk above NB- writing the image may take a significant amount of time (upwards of 30 minutes) depending on the speed of your disk, USB interface, Card Reader, and the SD Card itself.\nRemove the card  # Linux diskutil eject /dev/disk$disk_letter # MacOS diskutil eject /dev/disk$disk_num Remove the card from the reader.\nSTEP 3: Boot and configure the device   With the device powered OFF, insert the SD Card into the device\n  Connect a USB cable to the device\u0026rsquo;s micro-USB port and an open USB port on the host OR connect and HDMI monitor, keyboard and mouse to the device.\n  Power the device ON\n  (USB Cable only) Open a serial program on the host computer\n   Linux\n Determine the device name for the serial port\nls /dev/ttyUSB* # as with the disks, you may need to disconnect, and reconnect to compare available device lists # device name will be of the form /dev/ttyUSB\u0026lt;n\u0026gt; where n is an integer # export dev_num=\u0026lt;n\u0026gt; Open the serial port \u0026ndash; using picocom as example, there are many other programs.\nsudo picocom -b 115200 /dev/ttyUSB$dev_num If the current user is a member of the dialout group, sudo is not necessary. It is also possible to construct udev rules to avoid sudo here.\nPress the Return key and follow the on-screen prompts to set up the device and network connections. Accept all defaults\u0026ndash;recommend expanding the filesystem to the maximum.\nThe device may disconnect after configuration\n (Monitor and Keyboard) Follow the on-screen prompts to set up the device and network connections. Accept all defaults\u0026ndash;recommend expanding the filesystem to the maximum\n  Verify SSH connectivity (Optional, but recommended) This guide assumes you will connect to the device over ssh. However, all commands can be entered directly on the device if desired.\n  From a terminal on the host or other SSH program (e.g. PuTTY on Windows):\nssh \u0026lt;user\u0026gt;@\u0026lt;hostname\u0026gt;.local # where hostname and user are the ones you set up in #4 and the device is on the same network as the host ssh \u0026lt;user\u0026gt;@\u0026lt;ip\u0026gt; # if zeroconf is not running or other networking arrangement You have now added the device to your network and verified it\u0026rsquo;s connectivity. For the remainder of this workshop, use whatever mechanism you used to connect whenever you see ssh \u0026lt;user\u0026gt;@\u0026lt;device\u0026gt;\n"
},
{
	"uri": "/setup-nvidia-device/install-tools.html",
	"title": "Install Tools",
	"tags": [],
	"description": "",
	"content": "These steps will guide you through installing the necessary tools on your development host and the target device. You will install:\n AWS Command Line Interface (CLI)  Step 1: Install AWS CLI on developmet host On your host, install the AWS CLI version 2\n Linux (x86_64)\n curl \u0026#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\u0026#34; -o \u0026#34;awscliv2.zip\u0026#34; unzip awscliv2.zip sudo ./aws/install  MacOS\n curl \u0026#34;https://awscli.amazonaws.com/AWSCLIV2.pkg\u0026#34; -o \u0026#34;AWSCLIV2.pkg\u0026#34; sudo installer -pkg AWSCLIV2.pkg -target / Step 2: Configure the AWS CLI   Find the ACCESS KEY ID and SECRET ACCESS KEY for a role in your AWS account that has permissions to create IAM, IoT, and S3 resources. These are typically provided when the account is created and often delivered in a CSV file. If you cannot locate them, contact your account administrator or create new credentials from the IAM console.\n  Add the credentials to your AWS profile by typing\n  aws configure # optionally add -profile \u0026lt;profile-name\u0026gt;  When prompted provide the Access Key and Secret Access Key. For the purposes of this workshop, set the region to us-west-2 and json for the output format. The aws configure command can be reused to verify that values have been set properly.\naws configure # at the prompt, provide a new value or press return to accept the current value AWS Access Key ID [****************MNO5]: AWS Secret Access Key [****************RgDp]: Default region name [us-west-2]: Default output format [json]: Step 3: Verify configuration Verify the functionality of the CLI and the configuration with the command:\naws sts get-caller-identity Verify the UserId and Account values are correct in the output.\n{ \u0026#34;UserId\u0026#34;: \u0026#34;AID----BMW\u0026#34;, \u0026#34;Account\u0026#34;: \u0026#34;11-----16\u0026#34;, \u0026#34;Arn\u0026#34;: \u0026#34;arn:aws:iam::11-----16:user/s---c\u0026#34; } "
},
{
	"uri": "/greengrass-v2.html",
	"title": "Install Greengrass V2",
	"tags": [],
	"description": "",
	"content": "This lab will guide you to set up AWS IoT Greengrass v2 on the device you previously set up.\nStep 1: Connect to the target device  Using SSH\n ssh \u0026lt;user\u0026gt;@\u0026lt;device\u0026gt;  With Keybord and Monitor\n Open the terminal app.\nStep 2: Install Corretto (Java) Enter these commands into the device shell:\nwget -O- https://apt.corretto.aws/corretto.key | sudo apt-key add - sudo add-apt-repository \u0026#39;deb https://apt.corretto.aws stable main\u0026#39; sudo apt-get update; sudo apt-get install -y java-1.8.0-amazon-corretto-jdk java -version Step 3: Download Greengrass v2 curl -s https://d2s8p88vqu9w66.cloudfront.net/releases/greengrass-nucleus-latest.zip \u0026gt; greengrass-nucleus-latest.zip unzip greengrass-nucleus-latest.zip -d GreengrassCore \u0026amp;\u0026amp; rm greengrass-nucleus-latest.zip Step 4: Set environment variables Greengrass v2 has the ability to self-install and configure, but needs access credentials. Additionally, this installer will create an IoT thing, thing group, and IAM roles. Provide these values through shell variables. The AWS CLI credentials can be the same as you used in the host setup or can be newly created for just this role. The installer will not save these values. Using shell variables eliminates the need to install the CLI on the device.\n   shell var description     AWS_ACCESS_KEY_ID ID for account to create resources   AWS_SECRET_ACCESS_KEY secret key   AWS_DEFAULT_REGION region to use \u0026ndash; us-west-2 for this workshop   THING_NAME device name for this Greengrass Core   GROUP_NAME name for the Greengrass Group   ROLE_NAME name of IAM role for the core   ROLE_ALIAS alias used to refer to role to allow role to change    export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY export AWS_DEFAULT_REGION=us-west-2 export THING_NAME=jetson export GROUP_NAME=jetsonGroup export ROLE_NAME=MyGreengrassV2Role export ROLE_ALIAS=MyGreengrassCoreTokenExchangeRoleAlias Step 5: Run the installer sudo -E java -Dlog.store=FILE \\  -jar ./GreengrassCore/lib/Greengrass.jar \\  --aws-region $AWS_DEFAULT_REGION \\  --root /greengrass/v2 \\  --thing-name $THING_NAME \\  --thing-group-name $GROUP_NAME \\  --tes-role-name $ROLE_NAME \\  --tes-role-alias-name $ROLE_ALIAS \\  --component-default-user ggc_user:ggc_group \\  --provision true \\  --setup-system-service true sudo chmod 755 /greengrass/v2 \u0026amp;\u0026amp; sudo chmod 755 /greengrass "
},
{
	"uri": "/cont.html",
	"title": "Content",
	"tags": [],
	"description": "",
	"content": "Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "/cont/pages.html",
	"title": "Pages Organization",
	"tags": [],
	"description": "",
	"content": "In Hugo, pages are the core of your site. All of your workshop steps should be developed as pages.\nFolders Organize your workshop similar to the steps within a specfic workshop. For example, a workshop with 3 labs might look like this:\ncontent ├── lab-1 │ ├── step-1 │ │ ├── step-1a │ │ │ ├── _index.en.md \u0026lt;-- /en/lab-1/step-1/step-1a.html (in English) │ │ │ └── _index.fr.md \u0026lt;-- /fr/lab-1/step-1/step-1a.html (in French) │ │ ├── _index.en.md \u0026lt;-- /en/lab-1/step-1.html (in English) │ │ └── _index.fr.md \u0026lt;-- /fr/lab-1/step-1.html (in French) │ ├── _index.en.md \u0026lt;-- /en/lab-1.html (in English) │ └── _index.fr.md \u0026lt;-- /fr/lab-1.html (in French) ├── _index.en.md \u0026lt;-- /en/ (in English) └── _index.fr.md \u0026lt;-- /fr/ (in French)  _index.en.md is required in each folder, it’s your “folder home page”\n Types This template defines two types of pages. Default and Chapter. Both can be used at any level of the workshop, the only difference being layout display.\nA Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found under it. You can define any HTML as prefix for the menu. In the example below, it\u0026rsquo;s just a number but that could be an icon.\n  +++ title = \u0026#34;Basics\u0026#34; chapter = true weight = 10 pre = \u0026#34;\u0026lt;b\u0026gt;1. \u0026lt;/b\u0026gt;\u0026#34; +++ ### Chapter 1  # Basics Discover what this template is all about and the core-concepts behind it. To tell the template to consider a page as a chapter, set chapter=true in the Front Matter of the page.\nA Default page is any other content page.\n  +++ title = \u0026#34;Installation\u0026#34; weight = 12 +++ Images There are multiple ways to store images you need to use as part of your workshop. These pages use the Page Bundle method, which keeps the images for specific pages in the same folder structure as the content.\ncontent └── lab-1 └── step-1 └── step-1a ├── _index.en.md \u0026lt;-- /en/lab-1/step-1/step-1a.html └── my_image.en.png \u0026lt;-- /fr/lab-1/step-1/step-1a/my_image.en.png You can reference images in your pages when using the Page Bundle method by using the img shortcode. More information can be found here.\nYou can also opt to store all of your images in the static folder, which will be accessible from\ncontent └── lab-1 └── step-1 └── step-1a ├── _index.en.md \u0026lt;-- /en/lab-1/step-1/step-1a.html static └── images └── my_image.en.png \u0026lt;-- /images/my_image.en.png You can reference images stored in the static folder by using markdown syntax for images.\nFront Matter configuration Each Hugo page has to define a Front Matter in yaml, toml or json.\nThis template uses the following parameters on top of Hugo ones :\n+++ # Table of content (toc) is enabled by default. Set this parameter to true to disable it. # Note: Toc is always disabled for chapter pages disableToc = \u0026#34;false\u0026#34; # If set, this will be used for the page\u0026#39;s menu entry (instead of the `title` attribute) menuTitle = \u0026#34;\u0026#34; # The title of the page in menu will be prefixed by this HTML content pre = \u0026#34;\u0026#34; # The title of the page in menu will be postfixed by this HTML content post = \u0026#34;\u0026#34; # Set the page as a chapter, changing the way it\u0026#39;s displayed chapter = false # Hide a menu entry by setting this to true hidden = false # Display name of this page modifier. If set, it will be displayed in the footer. LastModifierDisplayName = \u0026#34;\u0026#34; # Email of this page modifier. If set with LastModifierDisplayName, it will be displayed in the footer LastModifierEmail = \u0026#34;\u0026#34; +++ Ordering sibling menu/page entries This template provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n+++ title = \u0026#34;My page\u0026#34; weight = 5 +++ We recommend that you set the weight for chapters as multiple of 10, with the pages inside each chapter counting down from there. For example:\nChapter 1: weight = 10\nPage 1: weight = 11\nPage 2: weight = 12\nChapter 2: weight = 20\nPage 1: weight = 21\nUsing a custom title for menu entries By default, the template will use a page\u0026rsquo;s title attribute for the menu item (or linkTitle if defined).\nBut a page\u0026rsquo;s title has to be descriptive on its own while the menu is a hierarchy. We\u0026rsquo;ve added the menuTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n+++ title = \u0026#34;Install on Linux\u0026#34; menuTitle = \u0026#34;Linux\u0026#34; +++ "
},
{
	"uri": "/cont/archetypes.html",
	"title": "Archetypes",
	"tags": [],
	"description": "",
	"content": "Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more : archetypes.\nIt is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.\nChapter To create a Chapter page, run the following commands\nhugo new --kind chapter \u0026lt;name\u0026gt;/_index.en.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 chapter = true pre = \u0026#34;\u0026lt;b\u0026gt;X. \u0026lt;/b\u0026gt;\u0026#34; +++ Lorem Ipsum. Default To create a default page, run either one of the following commands\n# Either hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;/_index.en.md # Or hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;.en.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 +++ Lorem Ipsum. "
},
{
	"uri": "/cont/markdown.html",
	"title": "Markdown Syntax",
	"tags": [],
	"description": "",
	"content": " This content is from the great Grav original page. Only difference is information about image customization (resizing, add CSS classes\u0026hellip;)\n Let\u0026rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\n Markdown is simple to learn, with minimal extra characters so it\u0026rsquo;s also quicker to write content. Less chance of errors when writing in markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use!  John Gruber, the author of Markdown, puts it like this:\n The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. \u0026ndash; John Gruber\n Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like:\nHeadings Headings from h1 through h6 are constructed with a # for each level:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Renders to:\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading HTML:\n\u0026lt;h1\u0026gt;h1 Heading\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt; Comments Comments should be HTML compatible\n\u0026lt;!-- This is a comment --\u0026gt; Comment below should NOT be seen:\nHorizontal Rules The HTML \u0026lt;hr\u0026gt; element is for creating a \u0026ldquo;thematic break\u0026rdquo; between paragraph-level elements. In markdown, you can create a \u0026lt;hr\u0026gt; with any of the following:\n ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks  renders to:\n   Body Copy Body copy written as normal, plain text will be wrapped with \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt; Emphasis Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text** renders to:\nrendered as bold text\nand this HTML\n\u0026lt;strong\u0026gt;rendered as bold text\u0026lt;/strong\u0026gt; Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n_rendered as italicized text_ renders to:\nrendered as italicized text\nand this HTML:\n\u0026lt;em\u0026gt;rendered as italicized text\u0026lt;/em\u0026gt; strikethrough In GFM (GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~ Which renders to:\nStrike through this text.\nHTML:\n\u0026lt;del\u0026gt;Strike through this text.\u0026lt;/del\u0026gt; Blockquotes For quoting blocks of content from another source within your document.\nAdd \u0026gt; before any text you want to quote.\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. Renders to:\n Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\n and this HTML:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;\u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; Blockquotes can also be nested:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt; \u0026gt; \u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. \u0026gt; \u0026gt; Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus. Renders to:\n Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\n Lists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bullet For example\n+ Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit  Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at   Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; TIP: If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  Code Inline code Wrap inline snippets of code with `.\nIn this example, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` should be wrapped as **code**. Renders to:\nIn this example, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; should be wrapped with code.\nHTML:\n\u0026lt;p\u0026gt;In this example, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; should be wrapped with \u0026lt;strong\u0026gt;code\u0026lt;/strong\u0026gt;.\u0026lt;/p\u0026gt; Indented code Or indent several lines of code by at least four spaces, as in:\n // Some comments line 1 of code line 2 of code line 3 of code  Renders to:\n// Some comments line 1 of code line 2 of code line 3 of code  HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Block code \u0026ldquo;fences\u0026rdquo; Use \u0026ldquo;fences\u0026rdquo; ``` to block in multiple lines of code.\n ```markdown Sample text here... ```  Sample text here... HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Syntax highlighting GFM, or \u0026ldquo;GitHub Flavored Markdown\u0026rdquo; also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code \u0026ldquo;fence\u0026rdquo;, ```js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code:\n ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ```  Renders to:\ngrunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Renders to:\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    And this HTML:\n\u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\n| Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |    Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Links Basic link [Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip):\nAssemble\nHTML:\n\u0026lt;a href=\u0026#34;http://assemble.io\u0026#34;\u0026gt;Assemble\u0026lt;/a\u0026gt; Add a title [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;) Renders to (hover over the link, there should be a tooltip):\nUpstage\nHTML:\n\u0026lt;a href=\u0026#34;https://github.com/upstage/\u0026#34; title=\u0026#34;Visit Upstage!\u0026#34;\u0026gt;Upstage\u0026lt;/a\u0026gt; Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections:\n## Chapter 1 \u0026lt;a id=\u0026#34;chapter-1\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026#34;chapter-2\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026#34;chapter-3\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works.\nImages Images have a similar syntax to links but include a preceding exclamation point.\n![APN Logo](/images/apn-logo.jpg) or\n![Alt text](/images/aws-open-source.jpg \u0026#34;AWS Open Source\u0026#34;) Resizing image Add HTTP parameters width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![APN Logo](/images/apn-logo.jpg?width=20pc) ![APN Logo](/images/apn-logo.jpg?height=50px) ![APN Logo](/images/apn-logo.jpg?height=50px\u0026amp;width=300px) Add CSS classes Add a HTTP classes parameter to the link image to add CSS classes. shadowand border are available but you could define other ones.\n![AWS Open Source](/images/aws-open-source.jpg?classes=shadow) ![AWS Open Source](/images/aws-open-source.jpg?classes=border) ![AWS Open Source](/images/aws-open-source.jpg?classes=border,shadow) "
},
{
	"uri": "/cont/icons.html",
	"title": "Icons and Logos",
	"tags": [],
	"description": "",
	"content": "This template loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.\nFinding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.\nThe HTML to include the heart icon is:\n\u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; Including in markdown Paste the \u0026lt;i\u0026gt; HTML into markup and Font Awesome will load the relevant icon.\nBuilt with \u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; from Grav and Hugo Which appears as\nBuilt with  from Grav and Hugo\nCustomising icons Font Awesome provides many ways to modify the icon\n Change colour (by default the icon will inherit the parent colour) Increase or decrease size Rotate Combine with other icons  Check the full documentation on web fonts with CSS for more.\n"
},
{
	"uri": "/cont/i18n.html",
	"title": "Multilingual and i18n",
	"tags": [],
	"description": "",
	"content": "This template is fully compatible with Hugo multilingual mode.\nIt provides:\n Translation strings for default values (English and French). Feel free to contribute ! Automatic menu generation from multilingual content In-browser language switching  Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current French and English website.\n# English is the default language defaultContentLanguage = \u0026#34;en\u0026#34; # Force to have /en/my-page and /fr/my-page routes, even for default language. defaultContentLanguageInSubdir= true [Languages] [Languages.en] title = \u0026#34;Documentation for Hugo Learn Theme\u0026#34; weight = 1 languageName = \u0026#34;English\u0026#34; [Languages.fr] title = \u0026#34;Documentation du thème Hugo Learn\u0026#34; weight = 2 languageName = \u0026#34;Français\u0026#34; Then, for each new page, append the id of the language to the file.\n Single file my-page.md is split in two files:  in English: my-page.en.md in French: my-page.fr.md   Single file _index.md is split in two files:  in English: _index.en.md in French: _index.fr.md    Be aware that only translated pages are displayed in menu. It\u0026rsquo;s not replaced with default language content.\n Use slug Front Matter parameter to translate urls too.\n Overwrite translation strings Translations strings are used for common default values used in the theme (Edit this page button, Search placeholder and so on). Translations are available in french and english but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;idlanguage\u0026gt;.toml and inspire yourself from the theme themes/learn/i18n/en.toml\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true "
},
{
	"uri": "/shortcodes.html",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it\u0026rsquo;s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nHugo-theme-learn provides multiple shortcodes on top of existing ones.\n Attachments  The Attachments shortcode displays a list of files attached to a page.\n Button  Nice buttons on your page.\n Children  List the child pages of a page\n Expand  Displays an expandable/collapsible section of text on your page\n Image  Displays a preformatted image on your page\n Notice  Disclaimers to help you structure your page\n Site param  Get value of site params variables in your page.\n Site URL  Get the base site URL in your page.\n Youtube  Youtube links that respect privacy.\n "
},
{
	"uri": "/shortcodes/attachments.html",
	"title": "Attachments",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": "The Attachments shortcode displays a list of files attached to a page.\n  Attachments   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    Usage The shortcurt lists files found in a specific folder.\nAttachements must be place in a folder named like your page and ending with .files.\n  content  chapter  _index.en.md _index.en.files  attachment.pdf         Be aware that if you use a multilingual website, you will need to have as many folders as languages.\n Parameters    Parameter Default Description     title \u0026ldquo;Attachments\u0026rdquo; List\u0026rsquo;s title   style \u0026quot;\u0026quot; Choose between \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; and \u0026ldquo;green\u0026rdquo; for nice style   pattern \u0026ldquo;.*\u0026rdquo; A regular expressions, used to filter the attachments by file name. The pattern parameter value must be regular expressions.    For example:\n To match a file suffix of \u0026lsquo;jpg\u0026rsquo;, use *.jpg (not *.jpg). To match file names ending in \u0026lsquo;jpg\u0026rsquo; or \u0026lsquo;png\u0026rsquo;, use .*(jpg|png)  Examples List of attachments ending in pdf or mp4 {{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(png|mp4)\u0026quot;/%}}  renders as\n  Related files   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    Colored styled box {{%attachments style=\u0026quot;orange\u0026quot; /%}}  renders as\n  Attachments   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    {{%attachments style=\u0026quot;grey\u0026quot; /%}}  renders as\n  Attachments   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    {{%attachments style=\u0026quot;blue\u0026quot; /%}}  renders as\n  Attachments   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    {{%attachments style=\u0026quot;green\u0026quot; /%}}  renders as\n  Attachments   AWS_AWS_logo_RGB.png  (32 kb)   DeckAssets_allup_light_filter-documents@2x.png  (6 kb)    "
},
{
	"uri": "/shortcodes/button.html",
	"title": "Button",
	"tags": [],
	"description": "Nice buttons on your page.",
	"content": "A button is a just a clickable button with optional icon.\n{{% button href=\u0026quot;https://en.wikipedia.org/wiki/Here_be_dragons\u0026quot; %}}Here be dragonss{{% /button %}} {{% button href=\u0026quot;https://en.wikipedia.org/wiki/Here_be_dragons\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Here be dragons with icon{{% /button %}} {{% button href=\u0026quot;https://en.wikipedia.org/wiki/Here_be_dragons\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Here be dragons with icon right{{% /button %}}  Here be dragons   Here be dragons with icon  Here by dragons with icon right   "
},
{
	"uri": "/shortcodes/children.html",
	"title": "Children",
	"tags": [],
	"description": "List the child pages of a page",
	"content": "Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage    Parameter Default Description     page current Specify the page name (section name) to display children for   style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name   showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed   description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list.when no description exists for the page, children shortcode takes the first 70 words of your content. read more info about summaries on gohugo.io   depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages.  Tips: set 999 to get all descendants   sort none Sort Children By\nWeight - to sort on menu orderName - to sort alphabetically on menu labelIdentifier - to sort alphabetically on identifier set in frontmatterURL - URL    Demo {{% children description=\u0026quot;true\u0026quot; depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   page 1    page 1-1    page 1-1-1     page 2    page test 3      page 3     page test     {{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   page 1  This is a demo child page\n page 1-1  This is a demo child page\n page 1-1-1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page test 3  This is a page test\n page 3  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page test  This is a page test\n {{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   page 1   page 1-1   page 1-1-1   page 1-1-1-1   page 1-1-1-1-1   Setup nVidia Device   Jetson Nano   Install Tools   Install Greengrass V2   Validate   Install   Content   Pages Organization   Archetypes   Markdown Syntax   Icons and Logos   Multilingual and i18n   Shortcodes   Attachments   Button   Children   page 1   page 1-1   page 1-1-1   page 1-1-1-1   page 1-1-1-1-1   page 2   page test 3   page 3   page test   Expand   Image   Notice   Site param   Site URL   Youtube   Launch   Metadata   page 2   page test 3   page 3   page test   "
},
{
	"uri": "/shortcodes/expand.html",
	"title": "Expand",
	"tags": [],
	"description": "Displays an expandable/collapsible section of text on your page",
	"content": "The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Usage This shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026quot;)\n{{%expand \u0026quot;Does this template rock?\u0026quot; %}}Yes !.{{% /expand%}}    Does this template rock?   Yes !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "/shortcodes/img.html",
	"title": "Image",
	"tags": [],
	"description": "Displays a preformatted image on your page",
	"content": "The img shortcode displays a preformatted image that is stored in your Page Bundle on your page. This means you should store your images in the same directory as your page. In the example below, the page markdown and the \u0026ldquo;chapter.en.png\u0026rdquo; file are both stored in the same directory.\nUsage This shortcode takes two parameters:\n The relative path to the image (based on the location of the current page). The alternate text to be used with the image.  {{\u0026lt; img \u0026#34;chapter.en.png\u0026#34; \u0026#34;A Chapter\u0026#34; \u0026gt;}}    "
},
{
	"uri": "/shortcodes/notice.html",
	"title": "Notice",
	"tags": [],
	"description": "Disclaimers to help you structure your page",
	"content": "The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}} renders as\nA notice disclaimer\n Info {{% notice info %}} An information disclaimer {{% /notice %}} renders as\nAn information disclaimer\n Tip {{% notice tip %}} A tip disclaimer {{% /notice %}} renders as\nA tip disclaimer\n Warning {{% notice warning %}} An warning disclaimer {{% /notice %}} renders as\nA warning disclaimer\n "
},
{
	"uri": "/shortcodes/siteparam.html",
	"title": "Site param",
	"tags": [],
	"description": "Get value of site params variables in your page.",
	"content": "siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026#34;https://code.amazon.com/packages/Aws-workshop-template/blobs/master/--/workshop/content/\u0026#34; Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026quot;editURL\u0026quot; %}} is displayed as\neditURL Value :\n"
},
{
	"uri": "/shortcodes/siteurl.html",
	"title": "Site URL",
	"tags": [],
	"description": "Get the base site URL in your page.",
	"content": "The siteurl shortcode is used to help you print the current base URL for your hosted site.\nFor instance, in this current site, the baseURL is\nUse the siteurl shortcode to display its value.\n{{% siteurl %}} is displayed as\n"
},
{
	"uri": "/shortcodes/youtube.html",
	"title": "Youtube",
	"tags": [],
	"description": "Youtube links that respect privacy.",
	"content": "Amazon is required to adhere to GDPR regulations, and controlling cookies is one part of that. Linking to Youtube can create cookies. Using the Youtube shortcode ensures privacy-enhanced links to youtube videos:\n{{% youtube dQw4w9WgXcQ %}}   "
},
{
	"uri": "/launch.html",
	"title": "Launch",
	"tags": [],
	"description": "",
	"content": "Follow these steps to launch your workshop for others to use!\n"
},
{
	"uri": "/launch/metadata.html",
	"title": "Metadata",
	"tags": [],
	"description": "Use metadata to catalogue and describe your workshop",
	"content": "There is a metadata.yml file found in the root of this repository that allows workshop creators to store descriptive information about their content for discovery \u0026amp; identification purposes.\nA metadata.yml file is required for all workshops that are intended to be reused and shared broadly.\n #name - DNS-friendly name for the workshop. This will be used when generating the hosting URL (ie. https://my-first-workshop.workshops.aws/) name: my-first-workshop #title - The title of your workshop title: My First Workshop  #description - A short description that will be displayed in search results description: Creating unicorns with serverless bitcoin magic!  #categories - Refer to official AWS categories covered by the workshop content here categories: - Networking - Compute #services - Refer to the official AWS service names covered by the workshop content here services: - Api Gateway - Lambda #level - Approximate skill level needed for this workshop level: 100 #duration - Estimated duration in minutes duration: 60 #cost - Cost in USD. If the content is offered without cost, enter 0 cost: 0 #author - Amazon alias of the primary author of the content author: mpgoetz  #audience - Names of the personas associated with this workshop audience: - IT Professional - Developer "
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/shortcodes/children/children-1.html",
	"title": "page 1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "/shortcodes/children/children-1/children-1-1.html",
	"title": "page 1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "/shortcodes/children/children-1/children-1-1/children-1-1-1.html",
	"title": "page 1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1.html",
	"title": "page 1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1.html",
	"title": "page 1-1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "/shortcodes/children/children-2.html",
	"title": "page 2",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "/shortcodes/children/children-3.html",
	"title": "page 3",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "/shortcodes/children/test.html",
	"title": "page test",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test demo child page\n"
},
{
	"uri": "/shortcodes/children/children-2/test3.html",
	"title": "page test 3",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test 3 demo child page\n"
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]